name: Rust CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}

jobs:
  lint:
    name: Rust Lint Check
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Install Rust toolchain via rustup
        run: |
          rustup override set nightly
          rustup component add clippy --toolchain nightly
          rustup component add rustfmt --toolchain nightly
      - name: Check linting
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Check formatting
        run: cargo fmt --all -- --check

  test:
    needs: lint
    name: Rust Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Build
        run: cargo build --all-features
      - name: Run tests for core library
        run: cargo test
      - name: Run tests for extensions
        run: cargo test --all-features --lib extensions -- --test-threads=1
